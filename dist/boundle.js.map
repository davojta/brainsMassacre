{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/dict.js","webpack:///./js/game.js","webpack:///./js/main.js","webpack:///./js/monster.js","webpack:///./js/mylib.js","webpack:///./js/player.js","webpack:///./js/spell.js","webpack:///./js/task.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;;AClvQA;AACA;AACA;AACA;AACsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;ACzJA;AACA;AACwB;;AAExB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,kBAAkB;;;;;;;;;;;;;;;;AClClB;AACsB;;AAEtjOA;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACjGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;AC1GA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;AC/DA;AAQC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,mBAAmB,kCAAkC;AACrD;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kCAAkC,eAAe;AACjD,mCAAmC,6BAA6B;AAChE,kCAAkC,2BAA2B;AAC7D;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA","file":"boundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./js/main.js\");\n","export const dictMonster = {\n  headsIdle: [\n    \"sprite-monster__head_idle_first\",\n    \"sprite-monster__head_idle_second\",\n    \"sprite-monster__head_idle_third\"\n  ],\n  bodiesIdle: [\n    \"sprite-monster__body_idle_first\",\n    \"sprite-monster__body_idle_second\",\n    \"sprite-monster__body_idle_third\"\n  ],\n  legsIdle: [\n    \"sprite-monster__legs_idle_first\",\n    \"sprite-monster__legs_idle_second\",\n    \"sprite-monster__legs_idle_third\"\n  ],\n  headsFire: [\n    \"sprite-monster__head_fire_first\",\n    \"sprite-monster__head_fire_second\",\n    \"sprite-monster__head_fire_third\"\n  ],\n  bodiesFire: [\n    \"sprite-monster__body_fire_first\",\n    \"sprite-monster__body_fire_second\",\n    \"sprite-monster__body_fire_third\"\n  ],\n  legsFire: [\n    \"sprite-monster__legs_fire_first\",\n    \"sprite-monster__legs_fire_second\",\n    \"sprite-monster__legs_fire_third\"\n  ],\n  headsHurt: [\n    \"sprite-monster__head_hurt_first\",\n    \"sprite-monster__head_hurt_second\",\n    \"sprite-monster__head_hurt_third\"\n  ],\n  bodiesHurt: [\n    \"sprite-monster__body_hurt_first\",\n    \"sprite-monster__body_hurt_second\",\n    \"sprite-monster__body_hurt_third\"\n  ],\n  legsHurt: [\n    \"sprite-monster__legs_hurt_first\",\n    \"sprite-monster__legs_hurt_second\",\n    \"sprite-monster__legs_hurt_third\"\n  ],\n  headsDie: [\n    \"sprite-monster__head_die_first\",\n    \"sprite-monster__head_die_second\",\n    \"sprite-monster__head_die_third\"\n  ],\n  bodiesDie: [\n    \"sprite-monster__body_die_first\",\n    \"sprite-monster__body_die_second\",\n    \"sprite-monster__body_die_third\"\n  ],\n  legsDie: [\n    \"sprite-monster__legs_die_first\",\n    \"sprite-monster__legs_die_second\",\n    \"sprite-monster__legs_die_third\"\n  ],\n\n  firstNames: [\n    \"Kazimir\",\n    \"Voiclah\",\n    \"Magamed\",\n    \"Ludovik\",\n    \"Genrich\",\n    \"Sigizmund\",\n    \"Aslanbek\",\n    \"Bzdashek\",\n    \"Ernest\",\n    \"Gans\",\n    \"Givi\",\n    \"Zayceslav\"\n  ],\n  secondNames: [\n    '\"Hriply\"',\n    '\"Shavka\"',\n    '\"Bambula\"',\n    '\"Baklan\"',\n    '\"Brodyaga\"',\n    '\"Vertuhai\"',\n    '\"Aristocrat\"',\n    '\"Lentyai\"',\n    '\"Babusya\"'\n  ],\n  thirdNames: [\n    \"Vonuchkin\",\n    \"Svininsky\",\n    \"Zhirnidze\",\n    \"Kakulko\",\n    \"Soplivkin\",\n    \"Gryaznulenko\",\n    \"Potnyakovich\",\n    \"Zaperdyak\",\n    \"Suhozad\",\n    \"Tryapkin\",\n    \"Zapadlovsky\"\n  ],\n\n  backgroundImages: [\"arena_1\", \"arena_2\", \"arena_3\", \"arena_4\"]\n};\n\nexport const dictTranslateTask = {\n  dog: [\"собака\", \"пес\", \"пёс\"],\n  cat: [\"кот\", \"кошка\", \"котэ\"],\n  house: [\"дом\"],\n  spell: [\"заклинание\", \"чары\"],\n  pig: [\"свинья\", \"поросенок\", \"поросёнок\", \"хрюшка\"],\n  bird: [\"птица\"],\n  towel: [\"полотенце\"],\n  table: [\"стол\", \"таблица\"],\n  flower: [\"цветок\", \"цвет\"]\n};\n\nexport const dictListeningTask = {\n  \"audio/listeningTask/elephant.mp3\": \"elephant\",\n  \"audio/listeningTask/forest.mp3\": \"forest\",\n  \"audio/listeningTask/mushroom.mp3\": \"mushroom\",\n  \"audio/listeningTask/ocean.mp3\": \"ocean\",\n  \"audio/listeningTask/rainbow.mp3\": \"rainbow\",\n  \"audio/listeningTask/strawberry.mp3\": \"strawberry\",\n  \"audio/listeningTask/tomato.mp3\": \"tomato\"\n};\n\nexport const dictCapitalsTask = {\n  \"img/capitalstask/spain.jpg\": [\"madrid\"],\n  \"img/capitalstask/belarus.jpeg\": [\"minsk\"],\n  \"img/capitalstask/canada.jpg\": [\"ottawa\", \"ottava\"],\n  \"img/capitalstask/germany.jpg\": [\"berlin\"],\n  \"img/capitalstask/greatbritain.jpg\": [\"london\"],\n  \"img/capitalstask/italy.jpg\": [\"rome\", \"rim\"],\n  \"img/capitalstask/lithuania.jpg\": [\"vilnius\", \"vilnus\"],\n  \"img/capitalstask/sweden.jpg\": [\"stockholm\", \"stokholm\", \"stokgolm\"],\n  \"img/capitalstask/usa.png\": [\"washington\"]\n};\n\nexport const dictSortTask = {\n  wolf: [\"wolf\", \"flow\"],\n  bisycle: [\"bisycle\"],\n  clothes: [\"clothes\"],\n  apple: [\"apple\"],\n  violet: [\"violet\"],\n  coffee: [\"coffee\"],\n  market: [\"market\"],\n  mirror: [\"mirror\"],\n  rabbit: [\"rabbit\"]\n};\n\nexport const dictRedundantTask = {\n  \"img/capitalstask/canada.jpg\": [\n    \"img/capitalstask/canada.jpg\",\n    \"img/capitalstask/spain.jpg\",\n    \"img/capitalstask/italy.jpg\"\n  ],\n  \"img/redudanttask/elephant.jpg\": [\n    \"img/redudanttask/bear.jpg\",\n    \"img/redudanttask/lion.jpg\",\n    \"img/redudanttask/elephant.jpg\"\n  ],\n  \"img/redudanttask/cucumber.jpg\": [\n    \"img/redudanttask/cucumber.jpg\",\n    \"img/redudanttask/oranges.jpg\",\n    \"img/redudanttask/pears.jpg\"\n  ],\n  \"img/redudanttask/lada.jpg\": [\n    \"img/redudanttask/mersedes.jpg\",\n    \"img/redudanttask/ferrari.jpg\",\n    \"img/redudanttask/lada.jpg\"\n  ],\n  \"img/redudanttask/sinica.jpg\": [\n    \"img/redudanttask/ostrich.jpg\",\n    \"img/redudanttask/sinica.jpg\",\n    \"img/redudanttask/pinguin.jpg\"\n  ]\n};\n\nexport const dictTriangleTask = [\n  [3, 4, 5],\n  [5, 12, 13],\n  [8, 15, 17],\n  [7, 24, 25],\n  [20, 21, 29],\n  [12, 35, 37],\n  [9, 40, 41]\n];\n\nexport const preloadImages = [\n  \"./img/arena1.jpg\",\n  \"./img/arena2.png\",\n  \"./img/arena3.png\",\n  \"./img/arena4.png\",\n  \"./img/heal.png\",\n  \"./img/sword.png\",\n  \"./img/smoke.png\",\n  \"./img/spritePlayer.png\",\n  \"./img/spritePlayerDie.png\",\n  \"./img/spritePlayerFire.png\",\n  \"./img/spritePlayerHeal1.png\",\n  \"./img/spritePlayerHurt.png\",\n  \"./img/monster/die/head/monsterHeadDie1.png\",\n  \"./img/monster/die/head/monsterHeadDie2.png\",\n  \"./img/monster/die/head/monsterHeadDie3.png\",\n  \"./img/monster/die/body/monsterBodyDie1.png\",\n  \"./img/monster/die/body/monsterBodyDie2.png\",\n  \"./img/monster/die/body/monsterBodyDie3.png\",\n  \"./img/monster/die/legs/monsterLegsDie1.png\",\n  \"./img/monster/die/legs/monsterLegsDie2.png\",\n  \"./img/monster/die/legs/monsterLegsDie3.png\",\n  \"./img/monster/fire/head/monsterHeadFire1.png\",\n  \"./img/monster/fire/head/monsterHeadFire2.png\",\n  \"./img/monster/fire/head/monsterHeadFire3.png\",\n  \"./img/monster/fire/body/monsterBodyFire1.png\",\n  \"./img/monster/fire/body/monsterBodyFire2.png\",\n  \"./img/monster/fire/body/monsterBodyFire3.png\",\n  \"./img/monster/fire/legs/monsterLegsFire1.png\",\n  \"./img/monster/fire/legs/monsterLegsFire2.png\",\n  \"./img/monster/fire/legs/monsterLegsFire3.png\",\n  \"./img/monster/hurt/head/monsterHeadHurt1.png\",\n  \"./img/monster/hurt/head/monsterHeadHurt2.png\",\n  \"./img/monster/hurt/head/monsterHeadHurt3.png\",\n  \"./img/monster/hurt/body/monsterBodyHurt1.png\",\n  \"./img/monster/hurt/body/monsterBodyHurt2.png\",\n  \"./img/monster/hurt/body/monsterBodyHurt3.png\",\n  \"./img/monster/hurt/legs/monsterLegsHurt1.png\",\n  \"./img/monster/hurt/legs/monsterLegsHurt2.png\",\n  \"./img/monster/hurt/legs/monsterLegsHurt3.png\",\n  \"./img/monster/idle/heads/monsterHeadIdle1.png\",\n  \"./img/monster/idle/heads/monsterHeadIdle2.png\",\n  \"./img/monster/idle/heads/monsterHeadIdle3.png\",\n  \"./img/monster/idle/bodies/monsterBodyIdle1.png\",\n  \"./img/monster/idle/bodies/monsterBodyIdle2.png\",\n  \"./img/monster/idle/bodies/monsterBodyIdle3.png\",\n  \"./img/monster/idle/legs/monsterLegsIdle1.png\",\n  \"./img/monster/idle/legs/monsterLegsIdle2.png\",\n  \"./img/monster/idle/legs/monsterLegsIdle3.png\",\n  \"./img/capitalstask/belarus.jpeg\",\n  \"./img/capitalstask/canada.jpg\",\n  \"./img/capitalstask/germany.jpg\",\n  \"./img/capitalstask/greatbritain.jpg\",\n  \"./img/capitalstask/italy.jpg\",\n  \"./img/capitalstask/lithuania.jpg\",\n  \"./img/capitalstask/spain.jpg\",\n  \"./img/capitalstask/sweden.jpg\",\n  \"./img/capitalstask/usa.png\",\n  \"./img/equationTask/apple.png\",\n  \"./img/equationTask/banana.png\",\n  \"./img/equationTask/coconut.png\",\n  \"./img/redudanttask/bear.jpg\",\n  \"./img/redudanttask/cucumber.jpg\",\n  \"./img/redudanttask/elephant.jpg\",\n  \"./img/redudanttask/ferrari.jpg\",\n  \"./img/redudanttask/lada.jpg\",\n  \"./img/redudanttask/lion.jpg\",\n  \"./img/redudanttask/mersedes.jpg\",\n  \"./img/redudanttask/oranges.jpg\",\n  \"./img/redudanttask/ostrich.jpg\",\n  \"./img/redudanttask/pears.jpg\",\n  \"./img/redudanttask/pinguin.jpg\",\n  \"./img/redudanttask/sinica.jpg\",\n  \"./img/triangle.png\",\n  \"./img/triangle1.png\"\n];\n","import Player from \"./player\";\nimport Monster from \"./monster\";\nimport Spell from \"./spell\";\nimport mylib from \"./mylib\";\nimport { dictMonster } from \"./dict\";\n\nclass Game {\n  constructor() {\n    this.player;\n    this.monster;\n    this.spell;\n    this.btnChooseSpell;\n  }\n\n  create() {\n    document.querySelector(\".reg-page\").style.display = \"none\";\n    document.querySelector(\".scores-page\").style.display = \"none\";\n    document.querySelector(\".game-page\").style.display = \"block\";\n    const playerName = document.querySelector(\"input\").value;\n\n    this.player = new Player(playerName);\n    this.player.drawPlayer();\n\n    this.monster = new Monster(this.player.score);\n    this.monster.drawMonster(this.player);\n\n    this.spell = new Spell();\n    this.btnChooseSpell = this.spell.open.bind(this.spell);\n    document\n      .getElementById(\"btn-choose-spell\")\n      .addEventListener(\"click\", this.btnChooseSpell);\n  }\n\n  setAnswer() {\n    if (this.spell.task.type === \"sort\") {\n      this.setSortAnswer();\n    }\n    if (this.spell.task.type === \"redundant\") {\n      this.setRedudantAnswer();\n    }\n    this.spell.task.answer = document.getElementById(\"answer\").value.toString();\n    document.getElementById(\"answer\").style.display = \"inline-block\";\n    document.querySelector(\".task-page\").style.display = \"none\";\n    document\n      .getElementById(\"btn-choose-spell\")\n      .removeEventListener(\"click\", this.btnChooseSpell);\n    this.spell.cast(this.player, this.monster);\n    setTimeout(this.isAlive.bind(this), 2000);\n  }\n\n  setSortAnswer() {\n    const ul = document.querySelector(\".sortable\");\n    let ans = \"\";\n    Array.prototype.forEach.call(ul.children, item => {\n      ans += item.innerText;\n    });\n    document.getElementById(\"answer\").value = ans;\n  }\n\n  setRedudantAnswer() {\n    const arrayOfInputs = document.querySelectorAll('input[type=\"radio\"]');\n    const chosenInput = Array.prototype.filter.call(\n      arrayOfInputs,\n      i => i.checked\n    )[0];\n    if (chosenInput === undefined) {\n      return false;\n    }\n    document.getElementById(\"answer\").value = chosenInput.value;\n  }\n\n  isAlive() {\n    if (!this.monster.isAlive()) {\n      this.monster.die();\n      setTimeout(() => this.monster.stopDie(), 1999);\n      setTimeout(() => this.nextMonster(), 2000);\n    } else if (!this.player.isAlive()) {\n      this.player.die();\n      setTimeout(() => this.finish(), 2000);\n    } else {\n      document\n        .getElementById(\"btn-choose-spell\")\n        .addEventListener(\"click\", this.btnChooseSpell);\n    }\n  }\n\n  nextMonster() {\n    const spriteMonster = document.querySelector(\".sprite-monster\");\n    spriteMonster.children[0].classList.remove(\n      dictMonster.headsIdle[this.monster.head]\n    );\n    spriteMonster.children[1].classList.remove(\n      dictMonster.bodiesIdle[this.monster.body]\n    );\n    spriteMonster.children[2].classList.remove(\n      dictMonster.legsIdle[this.monster.legs]\n    );\n\n    this.player.score += 1;\n    this.monster = new Monster(this.player.score);\n    this.monster.drawMonster(this.player);\n    this.player.health = Math.min(\n      this.player.health + mylib.getRandomFromTo(10, 15 + this.player.score),\n      this.player.startHealth\n    );\n    this.player.drawHealth();\n    document\n      .getElementById(\"btn-choose-spell\")\n      .addEventListener(\"click\", this.btnChooseSpell);\n  }\n\n  finish() {\n    document.querySelector(\".game-page\").style.display = \"none\";\n    document.querySelector(\".scores-page\").style.display = \"block\";\n    localStorage.setItem(\n      \"game\" + Date.now(),\n      this.player.name + \",\" + this.player.score\n    );\n    this.reset();\n    mylib.createHighscoresTable();\n  }\n\n  reset() {\n    document\n      .querySelector(\".sprite-player\")\n      .classList.remove(\"sprite-player__die\");\n    document\n      .querySelector(\".sprite-player\")\n      .classList.add(\"sprite-player__idle\");\n    const spriteMonster = document.querySelector(\".sprite-monster\");\n    spriteMonster.children[0].classList.remove(\n      dictMonster.headsIdle[this.monster.head]\n    );\n    spriteMonster.children[1].classList.remove(\n      dictMonster.bodiesIdle[this.monster.body]\n    );\n    spriteMonster.children[2].classList.remove(\n      dictMonster.legsIdle[this.monster.legs]\n    );\n    document\n      .getElementById(\"btn-choose-spell\")\n      .removeEventListener(\"click\", this.btnChooseSpell);\n    document\n      .querySelector(\".game-page\")\n      .classList.remove(\n        dictMonster.backgroundImages[\n          this.monster.score % dictMonster.backgroundImages.length\n        ]\n      );\n    document.querySelector(\"table\").innerHTML = \"\";\n  }\n}\n\nexport default Game;\n","import Game from \"./game.js\";\nimport mylib from \"./mylib\";\nimport { preloadImages } from \"./dict\";\n\nlet game = new Game();\nlet myGame = game.create.bind(game);\n\nmylib.preload(preloadImages);\nwindow.onload = function() {\n  document.querySelector(\".loading-page\").style.display = \"none\";\n  document.querySelector(\".reg-page\").style.display = \"block\";\n};\n\ndocument.getElementById(\"reg-form\").addEventListener(\"submit\", event => {\n  event.preventDefault();\n  mylib.validateForm(\"player-name\", myGame);\n});\n\ndocument.getElementById(\"btn-new-game\").addEventListener(\"click\", () => {\n  game.create();\n});\n\ndocument.querySelector(\".modal-window__spell\").addEventListener(\"click\", () => {\n  game.spell.chooseSpell(event);\n});\n\ndocument.getElementById(\"btn-answer\").addEventListener(\"click\", () => {\n  game.setAnswer();\n});\n\n/*let audio = new Audio();\naudio.volume = 0.03;\naudio.src = \"./audio/soundtrack.mp3\";\naudio.autoplay = true;\naudio.loop = true;*/\n","import mylib from \"./mylib\";\nimport { dictMonster } from \"./dict\";\n\nclass Monster {\n  constructor(score) {\n    this.score = score;\n    this.name = Monster.generateName();\n    this.startHealth = Monster.generateHealth(this.score);\n    this.health = this.startHealth;\n    this.head;\n    this.body;\n    this.legs;\n    this.audioFire = new Audio();\n    this.audioGrenadePin = new Audio();\n    this.audioGrenade = new Audio();\n  }\n\n  drawMonster() {\n    document.querySelector(\".monster-name\").innerHTML = this.name;\n    document.querySelector(\".round\").innerHTML = \"round \" + (this.score + 1);\n    this.drawHealth();\n    this.createSounds();\n\n    /*add new background and clear the previous*/\n    document\n      .querySelector(\".game-page\")\n      .classList.add(\n        dictMonster.backgroundImages[\n          this.score % dictMonster.backgroundImages.length\n        ]\n      );\n    document\n      .querySelector(\".game-page\")\n      .classList.remove(\n        dictMonster.backgroundImages[\n          (this.score - 1) % dictMonster.backgroundImages.length\n        ]\n      );\n\n    /*get random numbers to take head, body, legs from dictionary by these numbers */\n    this.head = mylib.getRandomFromTo(0, dictMonster.headsIdle.length - 1);\n    this.body = mylib.getRandomFromTo(0, dictMonster.bodiesIdle.length - 1);\n    this.legs = mylib.getRandomFromTo(0, dictMonster.legsIdle.length - 1);\n\n    /*draw the monster from taken head, body and legs*/\n    document\n      .querySelector(\".sprite-monster__head_idle\")\n      .classList.add(dictMonster.headsIdle[this.head]);\n    document\n      .querySelector(\".sprite-monster__body_idle\")\n      .classList.add(dictMonster.bodiesIdle[this.body]);\n    document\n      .querySelector(\".sprite-monster__legs_idle\")\n      .classList.add(dictMonster.legsIdle[this.legs]);\n  }\n\n  /*sets the green line of health and puts a number of health in html*/\n  drawHealth() {\n    document.querySelector(\".monster-health__remain\").style.width =\n      (this.health / this.startHealth) * 100 + \"%\";\n    document.querySelector(\".monster-health__remain\").innerHTML = this.health;\n  }\n\n  createSounds() {\n    this.audioFire.preload = \"auto\";\n    this.audioFire.volume = 1;\n    this.audioFire.src = \"./audio/monsterFire.mp3\";\n    this.audioGrenade.preload = \"auto\";\n    this.audioGrenade.volume = 1;\n    this.audioGrenade.src = \"./audio/grenade.mp3\";\n    this.audioGrenadePin.preload = \"auto\";\n    this.audioGrenadePin.volume = 1;\n    this.audioGrenadePin.src = \"./audio/grenade0.mp3\";\n  }\n\n  /*removes classes of idle parts of the monster and sets classes of fire parts of the monster*/\n  fire() {\n    this.audioFire.play();\n    const spriteMonster = document.querySelector(\".sprite-monster\");\n    spriteMonster.children[0].classList.remove(\"sprite-monster__head_idle\");\n    spriteMonster.children[0].classList.remove(\n      dictMonster.headsIdle[this.head]\n    );\n    spriteMonster.children[1].classList.remove(\"sprite-monster__body_idle\");\n    spriteMonster.children[1].classList.remove(\n      dictMonster.bodiesIdle[this.body]\n    );\n    spriteMonster.children[2].classList.remove(\"sprite-monster__legs_idle\");\n    spriteMonster.children[2].classList.remove(dictMonster.legsIdle[this.legs]);\n    spriteMonster.children[0].classList.add(\"sprite-monster__head_fire\");\n    spriteMonster.children[0].classList.add(dictMonster.headsFire[this.head]);\n    spriteMonster.children[1].classList.add(\"sprite-monster__body_fire\");\n    spriteMonster.children[1].classList.add(dictMonster.bodiesFire[this.body]);\n    spriteMonster.children[2].classList.add(\"sprite-monster__legs_fire\");\n    spriteMonster.children[2].classList.add(dictMonster.legsFire[this.legs]);\n  }\n\n  /*removes classes of fire parts of the monster and sets classes of idle parts of the monster*/\n  stopFire() {\n    const spriteMonster = document.querySelector(\".sprite-monster\");\n    spriteMonster.children[0].classList.remove(\"sprite-monster__head_fire\");\n    spriteMonster.children[0].classList.remove(\n      dictMonster.headsFire[this.head]\n    );\n    spriteMonster.children[1].classList.remove(\"sprite-monster__body_fire\");\n    spriteMonster.children[1].classList.remove(\n      dictMonster.bodiesFire[this.body]\n    );\n    spriteMonster.children[2].classList.remove(\"sprite-monster__legs_fire\");\n    spriteMonster.children[2].classList.remove(dictMonster.legsFire[this.legs]);\n    spriteMonster.children[0].classList.add(\"sprite-monster__head_idle\");\n    spriteMonster.children[0].classList.add(dictMonster.headsIdle[this.head]);\n    spriteMonster.children[1].classList.add(\"sprite-monster__body_idle\");\n    spriteMonster.children[1].classList.add(dictMonster.bodiesIdle[this.body]);\n    spriteMonster.children[2].classList.add(\"sprite-monster__legs_idle\");\n    spriteMonster.children[2].classList.add(dictMonster.legsIdle[this.legs]);\n  }\n\n  /*removes classes of idle parts of the monster and sets classes of hurt parts of the monster*/\n  hurt() {\n    const spriteMonster = document.querySelector(\".sprite-monster\");\n    spriteMonster.children[0].classList.remove(\"sprite-monster__head_idle\");\n    spriteMonster.children[0].classList.remove(\n      dictMonster.headsIdle[this.head]\n    );\n    spriteMonster.children[1].classList.remove(\"sprite-monster__body_idle\");\n    spriteMonster.children[1].classList.remove(\n      dictMonster.bodiesIdle[this.body]\n    );\n    spriteMonster.children[2].classList.remove(\"sprite-monster__legs_idle\");\n    spriteMonster.children[2].classList.remove(dictMonster.legsIdle[this.legs]);\n    spriteMonster.children[0].classList.add(\"sprite-monster__head_hurt\");\n    spriteMonster.children[0].classList.add(dictMonster.headsHurt[this.head]);\n    spriteMonster.children[1].classList.add(\"sprite-monster__body_hurt\");\n    spriteMonster.children[1].classList.add(dictMonster.bodiesHurt[this.body]);\n    spriteMonster.children[2].classList.add(\"sprite-monster__legs_hurt\");\n    spriteMonster.children[2].classList.add(dictMonster.legsHurt[this.legs]);\n  }\n\n  /*removes classes of hurt parts of the monster and sets classes of idle parts of the monster*/\n  stopHurt() {\n    const spriteMonster = document.querySelector(\".sprite-monster\");\n    spriteMonster.children[0].classList.remove(\"sprite-monster__head_hurt\");\n    spriteMonster.children[0].classList.remove(\n      dictMonster.headsHurt[this.head]\n    );\n    spriteMonster.children[1].classList.remove(\"sprite-monster__body_hurt\");\n    spriteMonster.children[1].classList.remove(\n      dictMonster.bodiesHurt[this.body]\n    );\n    spriteMonster.children[2].classList.remove(\"sprite-monster__legs_hurt\");\n    spriteMonster.children[2].classList.remove(dictMonster.legsHurt[this.legs]);\n    spriteMonster.children[0].classList.add(\"sprite-monster__head_idle\");\n    spriteMonster.children[0].classList.add(dictMonster.headsIdle[this.head]);\n    spriteMonster.children[1].classList.add(\"sprite-monster__body_idle\");\n    spriteMonster.children[1].classList.add(dictMonster.bodiesIdle[this.body]);\n    spriteMonster.children[2].classList.add(\"sprite-monster__legs_idle\");\n    spriteMonster.children[2].classList.add(dictMonster.legsIdle[this.legs]);\n  }\n\n  die() {\n    setTimeout(() => {\n      this.audioGrenadePin.play();\n    }, 130);\n    setTimeout(() => {\n      this.audioGrenade.play();\n    }, 400);\n    const spriteMonster = document.querySelector(\".sprite-monster\");\n    spriteMonster.children[0].classList.remove(\"sprite-monster__head_idle\");\n    spriteMonster.children[0].classList.remove(\n      dictMonster.headsIdle[this.head]\n    );\n    spriteMonster.children[1].classList.remove(\"sprite-monster__body_idle\");\n    spriteMonster.children[1].classList.remove(\n      dictMonster.bodiesIdle[this.body]\n    );\n    spriteMonster.children[2].classList.remove(\"sprite-monster__legs_idle\");\n    spriteMonster.children[2].classList.remove(dictMonster.legsIdle[this.legs]);\n    spriteMonster.children[0].classList.add(\"sprite-monster__head_die\");\n    spriteMonster.children[0].classList.add(dictMonster.headsDie[this.head]);\n    spriteMonster.children[1].classList.add(\"sprite-monster__body_die\");\n    spriteMonster.children[1].classList.add(dictMonster.bodiesDie[this.body]);\n    spriteMonster.children[2].classList.add(\"sprite-monster__legs_die\");\n    spriteMonster.children[2].classList.add(dictMonster.legsDie[this.legs]);\n  }\n\n  stopDie() {\n    const spriteMonster = document.querySelector(\".sprite-monster\");\n    spriteMonster.children[0].classList.remove(\"sprite-monster__head_die\");\n    spriteMonster.children[0].classList.remove(dictMonster.headsDie[this.head]);\n    spriteMonster.children[1].classList.remove(\"sprite-monster__body_die\");\n    spriteMonster.children[1].classList.remove(\n      dictMonster.bodiesDie[this.body]\n    );\n    spriteMonster.children[2].classList.remove(\"sprite-monster__legs_die\");\n    spriteMonster.children[2].classList.remove(dictMonster.legsDie[this.legs]);\n    spriteMonster.children[0].classList.add(\"sprite-monster__head_idle\");\n    spriteMonster.children[0].classList.add(dictMonster.headsIdle[this.head]);\n    spriteMonster.children[1].classList.add(\"sprite-monster__body_idle\");\n    spriteMonster.children[1].classList.add(dictMonster.bodiesIdle[this.body]);\n    spriteMonster.children[2].classList.add(\"sprite-monster__legs_idle\");\n    spriteMonster.children[2].classList.add(dictMonster.legsIdle[this.legs]);\n  }\n\n  /*checks if the monster is alive*/\n  isAlive() {\n    return this.health > 0;\n  }\n\n  /*generates the monster's name from three parts*/\n  static generateName() {\n    const chosenFirstName = mylib.getRandomArrayElement(dictMonster.firstNames);\n    const chosenSecondName = mylib.getRandomArrayElement(\n      dictMonster.secondNames\n    );\n    const chosenThirdName = mylib.getRandomArrayElement(dictMonster.thirdNames);\n    return chosenFirstName + \" \" + chosenSecondName + \" \" + chosenThirdName;\n  }\n\n  /*generates the monster's health depending on the level*/\n  static generateHealth(score) {\n    return 30 + score * 10 + mylib.getRandomFromTo(0, 10);\n  }\n}\n\nexport default Monster;\n","class mylib {\n  /*returns a random element of the passed array*/\n  static getRandomArrayElement(array) {\n    return array[Math.floor(Math.random() * array.length)];\n  }\n\n  /*returns a random integer from a gap between min and max*/\n  static getRandomFromTo(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n  /*draws a table with highscores*/\n  static createHighscoresTable() {\n    let recordsArray = mylib.getHighscores();\n    let recordsTable = document.querySelector(\"table\");\n    let headerRow = document.createElement(\"tr\");\n    let headerName = document.createElement(\"th\");\n    let headerScore = document.createElement(\"th\");\n    headerName.innerText = \"Name\";\n    headerScore.innerText = \"Score\";\n    headerRow.appendChild(headerName);\n    headerRow.appendChild(headerScore);\n    recordsTable.appendChild(headerRow);\n    for (let i = 0; i < recordsArray.length; i++) {\n      let tableRow = document.createElement(\"tr\");\n      let playerName = document.createElement(\"td\");\n      let playerScore = document.createElement(\"td\");\n      playerName.innerText = recordsArray[i][0];\n      playerScore.innerText = recordsArray[i][1];\n      tableRow.appendChild(playerName);\n      tableRow.appendChild(playerScore);\n      recordsTable.appendChild(tableRow);\n    }\n  }\n\n  /*returns a sorted array of 10 top scores*/\n  static getHighscores() {\n    let allScores = [];\n    let storageCount = localStorage.length;\n    for (let i = 0; i < storageCount; i++) {\n      if (localStorage.key(i).substr(0, 4) === \"game\") {\n        allScores.push(localStorage.getItem(localStorage.key(i)).split(\",\"));\n      }\n    }\n    for (let i = 0; i < allScores.length; i++) {\n      allScores[i][1] = Number(allScores[i][1]);\n    }\n    allScores = mylib.bubbleSort2D(allScores).slice(0, 10);\n    return allScores;\n  }\n\n  /*bubble sort for two-dimensional array*/\n  static bubbleSort2D(array) {\n    let length = array.length;\n    for (let i = 0; i < length - 1; i++) {\n      for (let j = 0; j < length - 1 - i; j++) {\n        if (array[j + 1][1] > array[j][1]) {\n          let t = array[j + 1];\n          array[j + 1] = array[j];\n          array[j] = t;\n        }\n      }\n    }\n    return array;\n  }\n\n  /*shuffles elements in array*/\n  static shuffle(array) {\n    let currentIndex = array.length;\n    let tempValue;\n    let randIndex;\n    while (0 !== currentIndex) {\n      randIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      tempValue = array[currentIndex];\n      array[currentIndex] = array[randIndex];\n      array[randIndex] = tempValue;\n    }\n    return array;\n  }\n\n  static validateForm(id, func) {\n    const name = document.getElementById(id).value;\n    if (name !== \"\") {\n      func();\n    }\n  }\n\n  static preload(arr) {\n    let images = new Array();\n    for (let i = 0; i < arr.length; i++) {\n      images[i] = new Image();\n      images[i].src = arr[i];\n    }\n  }\n}\n\nexport default mylib;\n","class Player {\n  constructor(name) {\n    this.name = name;\n    this.startHealth = 100;\n    this.health = this.startHealth;\n    this.score = 0;\n    this.audioFire = new Audio();\n    this.audioHeal = new Audio();\n    this.audioDie = new Audio();\n  }\n\n  drawPlayer() {\n    document.querySelector(\".player-name\").innerHTML = this.name;\n    this.drawHealth();\n    this.createSounds();\n  }\n\n  drawHealth() {\n    document.querySelector(\".player-health__remain\").style.width =\n      (this.health / this.startHealth) * 100 + \"%\";\n    document.querySelector(\".player-health__remain\").innerHTML = this.health;\n  }\n\n  createSounds() {\n    this.audioFire.preload = \"auto\";\n    this.audioFire.volume = 1;\n    this.audioFire.src = \"./audio/playerFire.mp3\";\n    this.audioHeal.preload = \"auto\";\n    this.audioHeal.volume = 1;\n    this.audioHeal.src = \"./audio/playerHeal.mp3\";\n      this.audioDie.preload = \"auto\";\n      this.audioDie.volume = 1;\n      this.audioDie.src = \"./audio/playerDie.mp3\";\n  }\n\n  fire() {\n    this.audioFire.play();\n    document\n      .querySelector(\".sprite-player\")\n      .classList.remove(\"sprite-player__idle\");\n    document\n      .querySelector(\".sprite-player\")\n      .classList.add(\"sprite-player__fire\");\n  }\n\n  stopFire() {\n    document\n      .querySelector(\".sprite-player\")\n      .classList.remove(\"sprite-player__fire\");\n    document\n      .querySelector(\".sprite-player\")\n      .classList.add(\"sprite-player__idle\");\n  }\n\n  healing() {\n    this.audioHeal.play();\n    document\n      .querySelector(\".sprite-player\")\n      .classList.remove(\"sprite-player__idle\");\n    document\n      .querySelector(\".sprite-player\")\n      .classList.add(\"sprite-player__heal\");\n  }\n\n  stopHealing() {\n    document\n      .querySelector(\".sprite-player\")\n      .classList.remove(\"sprite-player__heal\");\n    document\n      .querySelector(\".sprite-player\")\n      .classList.add(\"sprite-player__idle\");\n  }\n\n  hurt() {\n    document\n      .querySelector(\".sprite-player\")\n      .classList.remove(\"sprite-player__idle\");\n    document\n      .querySelector(\".sprite-player\")\n      .classList.add(\"sprite-player__hurt\");\n  }\n\n  stopHurt() {\n    document\n      .querySelector(\".sprite-player\")\n      .classList.remove(\"sprite-player__hurt\");\n    document\n      .querySelector(\".sprite-player\")\n      .classList.add(\"sprite-player__idle\");\n  }\n\n  die() {\n      this.audioDie.play();\n    document\n      .querySelector(\".sprite-player\")\n      .classList.remove(\"sprite-player__idle\");\n    document\n      .querySelector(\".sprite-player\")\n      .classList.add(\"sprite-player__die\");\n  }\n\n  isAlive() {\n    return this.health > 0;\n  }\n}\n\nexport default Player;\n","import Task from \"./task\";\nimport mylib from \"./mylib\";\n\nclass Spell {\n  constructor() {\n    this.kind;\n    this.task;\n  }\n\n  /*opens window with choise of spell type*/\n  open() {\n    document.querySelector(\".spell-page\").style.display = \"block\";\n  }\n\n  /*sets the chosen spell type into object's property and creates a task*/\n  chooseSpell(event) {\n    this.kind = event.target.getAttribute(\"id\");\n    document.querySelector(\".spell-page\").style.display = \"none\";\n    document.querySelector(\".task-page\").style.display = \"block\";\n    this.task = new Task();\n    this.task.generate();\n  }\n\n  /*if the chosen type of spell was \"atack\", the player atacks the monster or the monster atacks the player */\n  atack(atacking, atacked) {\n    atacked.health = Math.max(\n      atacked.health - mylib.getRandomFromTo(20, 25 + atacked.score),\n      0\n    );\n    atacked.drawHealth();\n    atacking.fire();\n    atacked.hurt();\n    setTimeout(atacking.stopFire.bind(atacking), 2000);\n    setTimeout(atacked.stopHurt.bind(atacked), 2000);\n  }\n\n  /*if the chosen type of spell was \"heal\" the player healing himself*/\n  heal(player) {\n    player.health = Math.min(\n      player.health + mylib.getRandomFromTo(20, 25 + player.score * 5),\n      player.startHealth\n    );\n    player.drawHealth();\n    player.healing();\n    setTimeout(player.stopHealing, 2000);\n  }\n\n  cast(player, monster) {\n    switch (this.kind) {\n      case \"atack-spell\":\n        this.task.isSolved()\n          ? this.atack(player, monster)\n          : this.atack(monster, player);\n        break;\n      case \"heal-spell\":\n        this.task.isSolved() ? this.heal(player) : this.atack(monster, player);\n        break;\n      default:\n        null;\n    }\n  }\n}\n\nexport default Spell;\n","import mylib from \"./mylib\";\nimport {\n  dictTranslateTask,\n  dictListeningTask,\n  dictCapitalsTask,\n  dictSortTask,\n  dictRedundantTask,\n  dictTriangleTask\n} from \"./dict\";\n\nclass Task {\n  constructor() {\n    this.type;\n    this.condition;\n    this.solution = [];\n    this.answer;\n  }\n\n  generate() {\n    document.querySelector(\".modal-window__task_media\").innerHTML = \"\";\n    document.getElementById(\"answer\").value = \"\";\n    const tasks = [\n      this.arithmetics,\n      this.translate,\n      this.listening,\n      this.capitals,\n      this.sort,\n      this.redundant,\n      this.equation,\n      this.triangle\n    ];\n    const currentTask = mylib.getRandomArrayElement(tasks).bind(this);\n    currentTask();\n  }\n\n  arithmetics() {\n    this.type = \"arithmetics\";\n    let firstNumber;\n    let secondNumber;\n    const operations = [\"+\", \"-\", \"*\", \"/\"];\n    const operation = mylib.getRandomArrayElement(operations);\n    if (operation === \"/\") {\n      const RandNumber = mylib.getRandomFromTo(1, 15);\n      secondNumber = mylib.getRandomFromTo(1, 15);\n      firstNumber = RandNumber * secondNumber;\n    } else if (operation === \"*\") {\n      firstNumber = mylib.getRandomFromTo(0, 30);\n      secondNumber = mylib.getRandomFromTo(0, 30);\n    } else {\n      firstNumber = mylib.getRandomFromTo(0, 100);\n      secondNumber = mylib.getRandomFromTo(0, 100);\n    }\n    this.condition = firstNumber + operation + secondNumber;\n    this.solution.push(eval(this.condition).toString());\n    document.querySelector(\".modal-window__task_description\").innerHTML =\n      \"solve the task:<br>\" + this.condition;\n  }\n\n  translate() {\n    this.type = \"translate\";\n    const arrayOfWords = Object.keys(dictTranslateTask);\n    const arrayOfWordsLength = arrayOfWords.length;\n    this.condition =\n      arrayOfWords[mylib.getRandomFromTo(0, arrayOfWordsLength - 1)];\n    this.solution = dictTranslateTask[this.condition];\n\n    document.querySelector(\".modal-window__task_description\").innerHTML =\n      \"translate into russian:<br>\" + this.condition;\n  }\n\n  listening() {\n    this.type = \"listening\";\n    const arrayOfWords = Object.keys(dictListeningTask);\n    const arrayOfWordsLength = arrayOfWords.length;\n    this.condition =\n      arrayOfWords[mylib.getRandomFromTo(0, arrayOfWordsLength - 1)];\n    this.solution.push(dictListeningTask[this.condition]);\n\n    const insertingAudio = document.createElement(\"audio\");\n    insertingAudio.setAttribute(\"src\", this.condition);\n    insertingAudio.setAttribute(\"controls\", \"\");\n    document\n      .querySelector(\".modal-window__task_media\")\n      .appendChild(insertingAudio);\n    document.querySelector(\".modal-window__task_description\").innerHTML =\n      \"type the word you heard\";\n  }\n\n  capitals() {\n    this.type = \"capitals\";\n    const arrayOfWords = Object.keys(dictCapitalsTask);\n    const arrayOfWordsLength = arrayOfWords.length;\n    this.condition =\n      arrayOfWords[mylib.getRandomFromTo(0, arrayOfWordsLength - 1)];\n    this.solution = dictCapitalsTask[this.condition];\n\n    const insertingFlag = document.createElement(\"img\");\n    insertingFlag.setAttribute(\"src\", this.condition);\n    document\n      .querySelector(\".modal-window__task_media\")\n      .appendChild(insertingFlag);\n    document.querySelector(\".modal-window__task_description\").innerHTML =\n      \"what is the capital of:\";\n  }\n\n  sort() {\n    this.type = \"sort\";\n    document.getElementById(\"answer\").style.display = \"none\";\n\n    const arrayOfWords = Object.keys(dictSortTask);\n    const arrayOfWordsLength = arrayOfWords.length;\n    this.condition =\n      arrayOfWords[mylib.getRandomFromTo(0, arrayOfWordsLength - 1)];\n    this.solution = dictSortTask[this.condition];\n\n    const chosenWordShuffledArr = mylib.shuffle(this.condition.split(\"\"));\n\n    const ul = document.createElement(\"ul\");\n    ul.classList.add(\"sortable\");\n\n    for (let i = 0; i < chosenWordShuffledArr.length; i++) {\n      const li = document.createElement(\"li\");\n      li.innerHTML = chosenWordShuffledArr[i];\n      ul.appendChild(li);\n    }\n\n    document.querySelector(\".modal-window__task_media\").appendChild(ul);\n\n    $(function() {\n      $(\".sortable\")\n        .sortable()\n        .disableSelection();\n    });\n\n    document.querySelector(\".modal-window__task_description\").innerHTML =\n      \"put the letters in the correct order:\";\n  }\n\n  redundant() {\n    this.type = \"redundant\";\n    document.getElementById(\"answer\").style.display = \"none\";\n\n    const arrayOfWords = Object.keys(dictRedundantTask);\n    const arrayOfWordsLength = arrayOfWords.length;\n    this.solution.push(\n      arrayOfWords[mylib.getRandomFromTo(0, arrayOfWordsLength - 1)]\n    );\n    this.condition = dictRedundantTask[this.solution];\n\n    const media = document.querySelector(\".modal-window__task_media\");\n    for (let i = 0; i < 3; i++) {\n      const label = document.createElement(\"label\");\n      const input = document.createElement(\"input\");\n      input.setAttribute(\"type\", \"radio\");\n      input.setAttribute(\"name\", \"redundantPic\");\n      input.setAttribute(\"value\", this.condition[i]);\n      const img = document.createElement(\"img\");\n      img.setAttribute(\"src\", this.condition[i]);\n      label.appendChild(input);\n      label.appendChild(img);\n      media.appendChild(label);\n    }\n\n    document.querySelector(\".modal-window__task_description\").innerHTML =\n      \"choose the redundant picture:\";\n  }\n\n  equation() {\n    this.type = \"equation\";\n\n    const apple = document.createElement(\"img\");\n    const banana = document.createElement(\"img\");\n    const coconut = document.createElement(\"img\");\n\n    const appleValue = mylib.getRandomFromTo(2, 10);\n    const bananaValue = mylib.getRandomFromTo(2, 10);\n    const coconutValue = mylib.getRandomFromTo(2, 10);\n\n    apple.setAttribute(\"src\", \"img/equationTask/apple.png\");\n    banana.setAttribute(\"src\", \"img/equationTask/banana.png\");\n    coconut.setAttribute(\"src\", \"img/equationTask/coconut.png\");\n\n    const plus = document.createElement(\"h3\");\n    const minus = document.createElement(\"h3\");\n    plus.innerText = \" + \";\n    minus.innerText = \" - \";\n\n    const firstResult = document.createElement(\"h3\");\n    const secondResult = document.createElement(\"h3\");\n    const thirdResult = document.createElement(\"h3\");\n    const fourthResult = document.createElement(\"h3\");\n\n    firstResult.innerText = ` = ${appleValue * 3}`;\n    secondResult.innerText = ` = ${appleValue + bananaValue * 2}`;\n    thirdResult.innerText = ` = ${bananaValue - coconutValue}`;\n    fourthResult.innerText = ` = ?`;\n\n    const firstRow = document.createElement(\"div\");\n    firstRow.classList.add(\"equation-row\");\n    const secondRow = firstRow.cloneNode();\n    const thirdRow = firstRow.cloneNode();\n    const fourthRow = firstRow.cloneNode();\n\n    firstRow.appendChild(apple.cloneNode(true));\n    firstRow.appendChild(plus.cloneNode(true));\n    firstRow.appendChild(apple.cloneNode(true));\n    firstRow.appendChild(plus.cloneNode(true));\n    firstRow.appendChild(apple.cloneNode(true));\n    firstRow.appendChild(firstResult);\n\n    secondRow.appendChild(apple.cloneNode(true));\n    secondRow.appendChild(plus.cloneNode(true));\n    secondRow.appendChild(banana.cloneNode(true));\n    secondRow.appendChild(plus.cloneNode(true));\n    secondRow.appendChild(banana.cloneNode(true));\n    secondRow.appendChild(secondResult);\n\n    thirdRow.appendChild(banana.cloneNode(true));\n    thirdRow.appendChild(minus.cloneNode(true));\n    thirdRow.appendChild(coconut.cloneNode(true));\n    thirdRow.appendChild(thirdResult);\n\n    fourthRow.appendChild(apple.cloneNode(true));\n    fourthRow.appendChild(plus.cloneNode(true));\n    fourthRow.appendChild(banana.cloneNode(true));\n    fourthRow.appendChild(plus.cloneNode(true));\n    fourthRow.appendChild(coconut.cloneNode(true));\n    fourthRow.appendChild(fourthResult);\n\n    const media = document.querySelector(\".modal-window__task_media\");\n    media.appendChild(firstRow);\n    media.appendChild(secondRow);\n    media.appendChild(thirdRow);\n    media.appendChild(fourthRow);\n\n    this.solution.push(String(appleValue + bananaValue + coconutValue));\n\n    document.querySelector(\".modal-window__task_description\").innerHTML =\n      \"solve the equation:\";\n  }\n\n  triangle() {\n    this.type = \"triangle\";\n    let [firstNumber, secondNumber, result] = mylib.getRandomArrayElement(\n      dictTriangleTask\n    );\n\n    this.solution.push(result.toString());\n\n    const div = document.createElement(\"div\");\n    div.classList.add(\"container-triangle\");\n    const image = document.createElement(\"img\");\n    image.classList.add(\"image-triangle\");\n    image.setAttribute(\"src\", \"img/triangle.png\");\n\n    const firstCathette = document.createElement(\"h2\");\n    const secondCathette = document.createElement(\"h2\");\n    firstCathette.classList.add(\"first-cathette\");\n    secondCathette.classList.add(\"second-cathette\");\n    firstCathette.innerText = secondNumber;\n    secondCathette.innerText = firstNumber;\n\n    div.appendChild(image);\n    div.appendChild(firstCathette);\n    div.appendChild(secondCathette);\n\n    document.querySelector(\".modal-window__task_media\").appendChild(div);\n    document.querySelector(\".modal-window__task_description\").innerHTML =\n      \"find x\";\n\n    image.addEventListener(\"click\", e => {\n      if (\n        e.offsetX > 125 &&\n        e.offsetX < 145 &&\n        e.offsetY > 70 &&\n        e.offsetY < 90\n      ) {\n        image.setAttribute(\"src\", \"img/triangle1.png\");\n        document.getElementById(\"answer\").style.display = \"none\";\n        document.getElementById(\"answer\").value = this.solution[0];\n      }\n    });\n  }\n\n  isSolved() {\n    return this.solution.includes(this.answer.toLowerCase());\n  }\n}\n\nexport default Task;\n"],"sourceRoot":""}